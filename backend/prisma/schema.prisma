generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(100)
  gl_account  gl_account[]
  subcategory subcategory[]
}

model gl_account {
  id             Int             @id @default(autoincrement())
  gl_account     String          @db.VarChar(50)
  name           String          @db.VarChar(100)
  category_id    Int
  subcategory_id Int
  category       category        @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subcategory    subcategory     @relation(fields: [subcategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  journal_entry  journal_entry[]
}

model journal_entry {
  id            Int           @id @default(autoincrement())
  entry_date    DateTime      @db.Date
  description   String?
  gl_account_id Int?
  amount        Decimal?      @db.Decimal(12, 2)
  created_by    Int?
  created_at    DateTime?     @default(now()) @db.Timestamp(6)
  user_account  user_account? @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  gl_account    gl_account?   @relation(fields: [gl_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  id           Int            @id @default(autoincrement())
  name         String?        @unique @db.VarChar(50)
  user_account user_account[]
}

model subcategory {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(100)
  category_id Int
  gl_account  gl_account[]
  category    category     @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([name, category_id])
}

model user_account {
  id            Int             @id @default(autoincrement())
  username      String?         @db.VarChar(100)
  password      String?         @db.VarChar(100)
  email         String?         @db.VarChar(100)
  role_id       Int?
  status        Int?
  date_created  DateTime?       @default(now()) @db.Timestamp(6)
  journal_entry journal_entry[]
  roles         roles?          @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
